import Head from "next/head";
import Image from "next/image";
import { useEffect, useState, useRef } from "react";
import * as THREE from "three";
import TRUNK from "vanta/dist/vanta.trunk.min";
import { PowerGlitch } from "powerglitch";
import Navbar from "@/components/Navbar";
import { Flex, Heading, Stack, Text } from "@chakra-ui/react";
import ArrowDownDark from "../assets/right-arrow-dark.svg";
import ArrowDownLight from "../assets/right-arrow-light.svg";
import { useColorMode } from "@chakra-ui/react";

export default function Home() {
  const [vantaEffect, setVantaEffect] = useState();
  const bgRef = useRef(null);
  const { colorMode } = useColorMode();

  useEffect(() => {
    if (colorMode === "light") {
      setVantaEffect(
        TRUNK({
          ...{
            el: bgRef.current,
            THREE: THREE,
            mouseControls: true,
            touchControls: true,
            gyroControls: false,
            minHeight: 200.0,
            minWidth: 200.0,
            scale: 1.0,
            scaleMobile: 1.0,
            color: 0xacacac,
            backgroundColor: 0xffffff,
            spacing: 8.5,
            chaos: 2.0,
          },
        })
      );
    } else if (colorMode === "dark") {
      setVantaEffect(
        TRUNK({
          ...{
            el: bgRef.current,
            THREE: THREE,
            mouseControls: true,
            touchControls: true,
            gyroControls: false,
            minHeight: 200.0,
            minWidth: 200.0,
            scale: 1.0,
            scaleMobile: 1.0,
            color: 0xacacac,
            backgroundColor: 0x1a202c,
            spacing: 8.5,
            chaos: 2.0,
          },
        })
      );
    }
    return () => {
      if (vantaEffect) vantaEffect.destroy();
    };
  }, [colorMode]);

  useEffect(() => {
    if (typeof window !== "undefined") {
      PowerGlitch.glitch(".glitch", {
        playMode: "always",
        hideOverflow: false,
        timing: {
          duration: 3000,
          iterations: 1000,
          easing: "ease-in-out",
        },
        glitchTimeSpan: {
          start: 0.4,
          end: 0.5,
        },
        shake: {
          velocity: 20,
          amplitudeX: 0.3,
          amplitudeY: 0.3,
        },
        slice: {
          count: 4,
          velocity: 10,
          minHeight: 0.02,
          maxHeight: 0.4,
          hueRotate: true,
        },
      });
    }
  }, []);

  return (
    <>
      <Head>
        <title>Erwin James | Frontend Developer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Navbar />
      <main className="h-[100vh] flex flex-col items-center justify-center mx-auto max-w-[1440px] w-[100%] px-6 overflow-hidden">
        <div
          ref={bgRef}
          className={`bg-holder ${
            colorMode === "light" ? "opacity-70" : "opacity-30"
          }
          `}
        ></div>
        <Flex direction={"column"} className="w-[100%] z-10 ">
          <Heading
            fontWeight={600}
            fontSize={{ base: "5xl", md: "6xl", lg: "8xl" }}
          >
            <Text className="leading-none glitch ">
              Front-end Developer <br></br> & Problem Solver.
            </Text>
          </Heading>
          <Text
            fontSize={{ base: "xl", md: "2xl", lg: "3xl" }}
            className="max-w-[700px] mt-6"
          >
            Hi, my name is Erwin James! I am fond of creating digital solutions
            to real world glitches we encounter every day.
          </Text>
          <Stack
            direction="row"
            spacing={4}
            alignItems={"center"}
            className=" mt-10"
            cursor={"pointer"}
          >
            <Image
              src={colorMode === "light" ? ArrowDownDark : ArrowDownLight}
              alt="view-projects-arrow"
              height={25}
              className="rotate-90"
            ></Image>
            <button className=" text-xl font-semibold">View Projects</button>
          </Stack>
        </Flex>
      </main>
      <div className="test-page h-[100vh] bg-[#ebebeb]"></div>
    </>
  );
}
